[{"title":"框架概述","date":"2016-11-17T09:50:03.000Z","path":"2016/11/17/框架概述/","content":"Play框架颠覆了臃肿的企业级Java EE规范，以Restful为目标并专注于开发效率，是Java敏捷开发的最佳参考方案。开发者只要具备Java以及数据库的相关基础知识就可以轻松上手，从而让Web应用开发变得更加容易，提高项目催化速度。 作为Full Stack的Java Web应用框架，Play包括了所有开发中涉及的领域：NIO应用容器，无状态MVC模型，Hibernate数据持久化，Groovy模板引擎，以及建立Web应用所需要的各种工具类。需要注意的是，这里虽然使用了Groovy，但只是将其作为页面模板语言，和Freemaker、Velocity使用自己定义的语言是同样的道理。Groovy的成熟以及它和Java的相似性决定了采用Groovy远远好于定义自己的模板语言。 Play的发展历程： 2009年10月19日发布Play 1.0稳定版，引入Groovy作为模板引擎，Python提供跨平台的Shell支持，并提供异步I/O功能。后续针对1.0进行BUG修复，以及新特性的增加：HTM5支持，提供Eclipse插件，模块仓库，App云服务等。2010年9月1日发布Play1.1稳定版本，将HTTP服务器从原来的Apache Mina替换为Jboss Netty，框架开始支持Scala语言，新的缓存特性，Oauth支持等。2011年4月13日发布Play 1.2稳定版本，将内存数据库从原来的HSQLDB转向H2，提供依赖管理，更好的异步特性等。当前最稳定版本为Play 1.2.7，于2013年8月29日发布，可以使用Java7来编写应用。当前最新版本为Play 1.3.0 RC版，于2014年6月26日发布，相信不久后就会有正式版本发布。 由于设计的考量，Play已经不采用Servlet/JSP，因而早期Play 0.x版本在发展历程中不做详细介绍。","tags":[{"name":"play","slug":"play","permalink":"http://lisxweb.github.io/tags/play/"}]},{"title":"Hello World","date":"2016-11-17T06:42:33.000Z","path":"2016/11/17/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]